{"meta":{"title":"保持好奇","subtitle":"独学而无友则孤陋而寡闻","description":null,"author":"Junsheng Wang","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"pic","slug":"pic","date":"2018-12-17T11:12:01.000Z","updated":"2018-12-17T11:19:18.673Z","comments":true,"path":"2018/12/17/pic/","link":"","permalink":"http://yoursite.com/2018/12/17/pic/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"hexo中添加本地图片","slug":"hexo中添加本地图片","date":"2018-12-17T11:07:44.000Z","updated":"2018-12-17T11:10:33.838Z","comments":true,"path":"2018/12/17/hexo中添加本地图片/","link":"","permalink":"http://yoursite.com/2018/12/17/hexo中添加本地图片/","excerpt":"","text":"Hexo中添加本地图片 参考文献 Hexo中添加本地图片 First1 把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true 2 在你的hexo目录下执行这样一句话1npm install hexo-asset-image --save 这是下载安装一个可以上传本地图片的插件，来自dalao：dalao的git 3 等待一小段时间后，再运行hexo n &quot;xxxx&quot;来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹 4 最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：1![你想输入的替代文字](xxxx/图片名.jpg) 注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。 5 最后检查一下，hexo g生成页面后，进入public\\2017\\02\\26\\index.html文件中查看相关字段，可以发现，html标签内的语句是&lt;img src=&quot;2017/02/26/xxxx/图片名.jpg&quot;&gt;，而不是&lt;img src=&quot;xxxx/图片名.jpg&gt;。这很重要，关乎你的网页是否可以真正加载你想插入的图片。 Second本地source中建立img文件夹1&lt;img src=&quot;img/图片名.jpg&gt; 这个比较方便","categories":[],"tags":[]},{"title":"ubuntu上github的部署","slug":"github","date":"2018-12-17T03:43:07.000Z","updated":"2018-12-17T04:05:32.972Z","comments":true,"path":"2018/12/17/github/","link":"","permalink":"http://yoursite.com/2018/12/17/github/","excerpt":"","text":"ubuntu上github的部署1. 单git账户的配置首先介绍ubuntu上不存在git账户时，配置首个git的情况，机台上配置多git账户的情况可参见第二章节。 参考文献 Github 简明教程 1.1 配置Git首先在本地创建ssh key；1$ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot; 后面的your_email@youremail.com改为你在github上注册的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key。回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。 github-account为了验证是否成功，在git bash下输入：1$ ssh -T git@github.com 如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。12$ git config --global user.name &quot;your name&quot;$ git config --global user.email &quot;your_email@youremail.com&quot; 进入要上传的仓库，右键git bash，添加远程地址：1$ git remote add origin git@github.com:yourName/yourRepo.git 后面的yourName和yourRepo表示你再github的用户名和刚才新建的仓库，加完之后进入.git，打开config，这里会多出一个remote “origin”内容，这就是刚才添加的远程地址，也可以直接修改config来配置远程地址。创建新文件夹，打开，然后执行 git init 以创建新的 git 仓库。检出仓库执行如下命令以创建一个本地仓库的克隆版本：1git clone /path/to/repository 如果是远端服务器上的仓库，你的命令会是这个样子：1git clone username@host:/path/to/repository 工作流你的本地仓库由 git 维护的三棵”树”组成。第一个是你的 工作目录，它持有实际文件；第二个是 暂存区（Index），它像个缓存区域，临时保存你的改动；最后是 HEAD，它指向你最后一次提交的结果。你可以提出更改（把它们添加到暂存区），使用如下命令：12git add &lt;filename&gt;git add * 这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：1git commit -m &quot;代码提交信息&quot; 现在，你的改动已经提交到了 HEAD，但是还没到你的远端仓库。trees推送改动你的改动现在已经在本地仓库的 HEAD 中了。执行如下命令以将这些改动提交到远端仓库：1git push origin master 可以把 master 换成你想要推送的任何分支。 如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：1git remote add origin &lt;server&gt; 如此你就能够将你的改动推送到所添加的服务器上去了。分支分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是”默认的”分支。在其他分支上进行开发，完成后再将它们合并到主分支上。branches创建一个叫做”feature_x”的分支，并切换过去：1git checkout -b feature_x 切换回主分支：1git checkout master 再把新建的分支删掉：1git branch -d feature_x 除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：1git push origin &lt;branch&gt; 更新与合并要更新你的本地仓库至最新改动，执行：1git pull 以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。要合并其他分支到你的当前分支（例如 master），执行： 1git merge &lt;branch&gt; 在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现冲突（conflicts）。 这时候就需要你修改这些文件来手动合并这些冲突（conflicts）。改完之后，你需要执行如下命令以将它们标记为合并成功：1git add &lt;filename&gt; 在合并改动之前，你可以使用如下命令预览差异：1git diff &lt;source_branch&gt; &lt;target_branch&gt; 标签为软件发布创建标签是推荐的。这个概念早已存在，在 SVN 中也有。你可以执行如下命令创建一个叫做 1.0.0 的标签：1git tag 1.0.0 1b2e1d63ff 1b2e1d63ff 是你想要标记的提交 ID 的前 10 位字符。可以使用下列命令获取提交 ID：1git log 你也可以使用少一点的提交 ID 前几位，只要它的指向具有唯一性。替换本地改动假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：1git checkout -- &lt;filename&gt; 此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到暂存区的改动以及新文件都不会受到影响。假如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：12git fetch origingit reset --hard origin/master 实用小贴士内建的图形化 git：gitk彩色的 git 输出：1git config color.ui true 显示历史记录时，每个提交的信息只显示一行：1git config format.pretty oneline 交互式添加文件到暂存区：1git add -i 链接与资源图形化客户端12345GitX (L) (OSX, 开源软件)Tower (OSX)Source Tree (OSX, 免费)GitHub for Mac (OSX, 免费)GitBox (OSX, App Store) 指南和手册Git 社区参考书专业 Git像 git 那样思考GitHub 帮助图解 Git相关文章Github 简明指南：http://rogerdudler.github.io/git-guide/index.zh.html如何高效利用GitHub:http://www.yangzhiping.com/tech/github.html 123456ssh-keygen -t rsa -C &quot;jobKzzz@gmail.com&quot;/home/js/.ssh/gitHub_id_rsa/id_rsassh -T git@github.comWarning: Permanently added the RSA host key for IP address &apos;192.30.253.112&apos; to the list of known hosts.Permission denied (publickey). 2. 多git账户的配置参考文献 生成多个git ssh密钥 如果你已经有了一套名为 id_rsa 的公秘钥，将要生成另外一个公钥，比如 aysee ，你也可以使用任何你喜欢的名字。 步骤如下： 1、生成一个新的自定义名称的公钥： 1ssh-keygen -t rsa -C &quot;YOUR_EMAIL@YOUREMAIL.COM&quot; -f ~/.ssh/aysee 执行命令后，生成命名的公钥和生成默认公钥的步骤一样。 执行完成后，会在 ~/.ssh/目录下生成一个 aysee 和 aysee.pub 文件。 2、在 SSH 用户配置文件 ~/.ssh/config 中指定对应服务所使用的公秘钥名称，如果没有 config 文件的话就新建一个，并输入以下内容： 12Host github.com www.github.com IdentityFile ~/.ssh/aysee 3、添加 aysee.pub 到你的git服务器网站上。 4、测试配置文件是否正常工作 1ssh -T git@gitcafe.com 如果，正常的话，会出现如下提示： 1Hi USERNAME! You&apos;ve successfully authenticated, but github does not provide shell access. 如果出现如下提示，则说明有权限问题： 1Permission denied (publickey) 如果有权限问题的情况下，你对项目执行push操作的时候，会得到如下提示： Warning: Permanently added the RSA host key for IP address ‘192.30.252.129’ to the list of known hosts.Permission denied (publickey).fatal: Could not read from remote repository. Please make sure you have the correct access rightsand the repository exists. 多用户时出现权限问题的原因： github使用SSH与客户端连接。如果是单用户（first），生成密钥对后，将公钥保存至 GitHub ，每次连接时SSH客户端发送本地私钥（默认~/.ssh/id_rsa）到服务端验证。单用户情况下，连接的服务器上保存的公钥和发送的私钥自然是配对的。但是如果是 多用户 （first，second），我们在连接到second的帐号时，second保存的是自己的公钥，但是SSH客户端依然发送默认私钥，即first的私钥，那么这个验证自然无法通过。 解决ssh权限问题（）: 通常一台电脑生成一个ssh不会有这个问题，当一台电脑生成多个ssh的时候，就可能遇到这个问题，解决步骤如下： 1、查看系统ssh-key代理,执行如下命令 1 1$ ssh-add -l 以上命令如果输出 The agent has no identities. 则表示没有代理。如果系统有代理，可以执行下面的命令清除代理: 1 1$ ssh-add -D 2、然后依次将不同的ssh添加代理，执行命令如下： 12 12$ ssh-add ~/.ssh/id_rsa$ ssh-add ~/.ssh/aysee 你会分别得到如下提示： 12048 8e:71:ad:88:78:80:b2:d9:e1:2d:1d:e4:be:6b:db:8e /Users/aysee/.ssh/id_rsa (RSA) 和 122048 8e:71:ad:88:78:80:b2:d9:e1:2d:1d:e4:be:6b:db:8e /Users/aysee/.ssh/id_rsa (RSA)2048 a7:f4:0d:f1:b1:76:0b:bf:ed:9f:53:8c:3f:4c:f4:d6 /Users/aysee/.ssh/aysee (RSA) 如果使用 ssh-add ~/.ssh/id_rsa的时候报如下错误，则需要先运行一下 ssh-agent bash 命令后再执行 ssh-add …等命令 Could not open a connection to your authentication agent.12343、配置 ~/.ssh/config 文件 如果没有就在~/.ssh目录创建config文件，该文件用于配置私钥对应的服务器 Default github user(first@mail.com)Host github.comHostName github.comUser gitIdentityFile C:/Users/username/.ssh/id_rsa aysee (company_email@mail.com)Host github-ayseeHostName github.comUser gitIdentityFile C:/Users/username/.ssh/aysee 1234 Host随意即可，方便自己记忆，后续在添加remote是还需要用到。 配置完成后，在连接非默认帐号的github仓库时，远程库的地址要对应地做一些修改，比如现在添加second帐号下的一个仓库test，则需要这样添加：12 git remote add test git@github-aysee:ay-seeing/test.git 12345678#并非原来的git@github.com:ay-seeing/test.git ay-seeing 是github的用户名 4、测试 ssh1 ssh -T git@github.com 1 你会得到如下提示，表示这个ssh公钥已经获得了权限 Hi USERNAME! You’ve successfully authenticated, but github does not provide shell access. `","categories":[],"tags":[]},{"title":"hexo","slug":"hexo","date":"2018-12-17T03:42:24.000Z","updated":"2018-12-17T03:42:56.027Z","comments":true,"path":"2018/12/17/hexo/","link":"","permalink":"http://yoursite.com/2018/12/17/hexo/","excerpt":"","text":"安装Nodejs 作用：用来生成静态页面的 $ sudo apt-get install nodejs$ sudo apt-get install npm 备用：sudo apt install nodejs-legacy 检查版本：node -vv4.2.6 2.安装Hexo 正式安装Hexo$ sudo npm install -g hexo 初始化$ hexo init blog(自己定的名字) hexo init Blogs npm WARN optional Skipping failed optional dependency /chokidar/fsevents:npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.2.4npm WARN optional Skipping failed optional dependency /nunjucks/chokidar/fsevents:npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.2.4 cd Blogsnpm install npm WARN optional Skipping failed optional dependency /chokidar/fsevents:npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.2.4npm WARN optional Skipping failed optional dependency /nunjucks/chokidar/fsevents:npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.2.4 hexo -v No command ‘hero’ found, did you mean: Command ‘hetro’ from package ‘csound-utils’ (universe) Command ‘nero’ from package ‘alliance’ (universe)hero: command not found sudo npm install -g hexo▄ ╢░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟WARN engine hexo@3.8.0: wanted: {“node”:”&gt;=6.9.0”} (current: {“node”:”4.2.6”,”npm”:”3.5.2”})WARN engine hexo@3.8.0: wanted: {“node”:”&gt;=6.9.0”} (current: {“node”:”4.2.6”,”npnpm WARN deprecated titlecase@1.1.2: no longer maintainedloadDep:warehouse → get ▀ ╢██████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟WARN engine hexo-fs@0.2.3: wanted: {“node”:”&gt;=6.9.0”} (current: {“node”:”4.2.6”,loadDep:warehouse → netwo ▐ ╢██████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟WARN engine nunjucks@3.1.4: wanted: {“node”:”&gt;= 6.9.0 &lt;= 11.1.0”} (current: {“noloadDep:readable-stream → ▐ ╢███████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟WARN engine readable-stream@3.0.6: wanted: {“node”:”&gt;= 6”} (current: {“node”:”4.loadDep:urix → 304 ▐ ╢████████████░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░╟WARN engine atob@2.1.2: wanted: {“node”:”&gt;= 4.5.0”} (current: {“node”:”4.2.6”,”nnpm WARN deprecated postinstall-build@5.0.3: postinstall-build’s behavior is now built into npm! You should migrate off of postinstall-build and use the new prepare lifecycle script with npm 5.0.0 or greater./usr/local/bin/hexo -&gt; /usr/local/lib/node_modules/hexo/bin/hexo/usr/local/lib└── hexo@3.8.0 npm WARN optional Skipping failed optional dependency /hexo/chokidar/fsevents:npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.2.4npm WARN optional Skipping failed optional dependency /hexo/nunjucks/chokidar/fsevents:npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.2.4 重装新版本的notejs1、下载linux下新版本的notejshttps://nodejs.org/en/ 2、解压tar.xz文件在linux下，大部分情况下不能直接解压tar.xz的文件。 需要用xz -d xxx.tar.xz 1 将 xxx.tar.xz解压成 xxx.tar 然后，再用tar xvf xxx.tar 3、配置开发环境 修改/etc/profile文件 增加以下内容： #SET PATH FOR NODEJSexport NODE_HOME=/opt/node-v10.14.2-linux-x64export PATH=$NODE_HOME/bin:$PATH 注：把NODE_HOME的内容换成nodejs的安装路径即可。 使用指令使环境变量生效 source /etc/profile （source仅在当前terminal起效，其他terminal需重新执行） 检查是否配置成功 $ node -v 输出版本号：v10.14.2 $ npm -v 输出版本号：6.4.1作者：还是图样图森破来源：CSDN原文：https://blog.csdn.net/darkwindzzh/article/details/82192704版权声明：本文为博主原创文章，转载请附上博文链接！ 全局安装n管理器(用于管理nodejs版本) sudo npm install n -g安装最新的nodejs（stable版本） sudo n stablesudo node -v js@juns:~/Desktop/ tools/github_Notes/Blogs$ source /etc/profilejs@juns:~/Desktop/ tools/github_Notes/Blogs$ node -vnpm install js@juns:~/Desktop/ tools/github_Notes/Blogs$ hexo -vhexo: 3.8.0hexo-cli: 1.1.0os: Linux 4.15.0-42-generic linux x64http_parser: 2.8.0node: 10.14.2v8: 6.8.275.32-node.45uv: 1.23.2zlib: 1.2.11ares: 1.15.0modules: 64nghttp2: 1.34.0napi: 3openssl: 1.1.0jicu: 62.1unicode: 11.0cldr: 33.1tz: 2018e 这个位置就是 hexo 工作空间，到这一步，其实Hexo的安装都已经完成了。 Hexo设置$ hexo g #生成静态网页$ hexo s #运行本地服务器 关于hexo 的命令，和命令的缩写下面会讲。顺利的话会出现INFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.Tips : 如果 4000 端口被占用，hexo server -p 5000 主题更改 我使用的是next主题，大家的评论还是非常不错的。 安装主题 BlueLake博客主题的详细配置$ hexo clean$ git clone https://github.com/iissnan/hexo-theme-next themes/nexthttps://chaoo.oschina.io/2016/12/29/BlueLake%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AF%A6%E7%BB%86%E9%85%8D%E7%BD%AE.html 1.2 安装主题渲染器BlueLake是基于jade和stylus写的，所以需要安装hexo-renderer-jade和hexo-renderer-stylus来渲染。 git bash12$ npm install hexo-renderer-jade@0.3.0 –save found 2 low severity vulnerabilities run npm audit fix to fix them, or npm audit for detailsjs@juns:~/Desktop/ tools/github_Notes/Blogs$ npm audit fix $ npm install hexo-renderer-stylus –savefound 2 low severity vulnerabilities run npm audit fix to fix them, or npm audit for detailsjs@juns:~/Desktop/ tools/github_Notes/Blogs$ npm audit fix npm install hexo-generator-json-content@2.2.0 –savejs@juns:~/Desktop/ tools/github_Notes/Blogs$ npm audit fixnpm audit fix –force 查找hexo的可视化编辑器https://www.jianshu.com/p/68e727dda16d如何优雅地发布Hexo博客https://jaredforsyth.com/hexo-admin/hexo-admin的官网安装hexo-adminnpm install –save hexo-admin npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issuenpm WARN deprecated connect@2.7.11: connect 2.x series is deprecatednpm WARN deprecated boom@2.10.1: This version is no longer maintained. Please upgrade to the latest version.npm WARN deprecated hoek@2.16.3: This version is no longer maintained. Please upgrade to the latest version.npm WARN deprecated cryptiles@2.0.5: This version is no longer maintained. Please upgrade to the latest version.npm WARN acorn-dynamic-import@4.0.0 requires a peer of acorn@^6.0.0 but none is installed. You must install peer dependencies yourself. hexo-admin@2.3.0added 250 packages from 438 contributors and audited 6973 packages in 29.407sfound 18 vulnerabilities (5 low, 7 moderate, 5 high, 1 critical)run npm audit fix to fix them, or npm audit for detailsjs@juns:~/Desktop/ tools/github_Notes/Blogs$ npm audit fixnpm WARN acorn-dynamic-import@4.0.0 requires a peer of acorn@^6.0.0 but none is installed. You must install peer dependencies yourself. up to date in 3.191sfixed 0 of 18 vulnerabilities in 6973 scanned packages 18 vulnerabilities required manual review and could not be updated npm audit fix https://blog.csdn.net/u011781521/article/details/52742509npm安装cordova时警告:npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to二、解决方法 升级minimatch到3.0.2 npm update minimatch@3.0.2 npm update -d 升级后依旧报错,只好重装: npm update minimatch npm -v minimatch npm install -g npm@3 当你安装 hexo-admin，执行 npm install –save hexo-admin 时，可能会遇到上面的错误提示，是因为你缺少了一些依赖，执行下面的就好了。 12npm install minimatch@”3.0.2”npm update -d npm install minimatch@”3.0.2”npm WARN acorn-dynamic-import@4.0.0 requires a peer of acorn@^6.0.0 but none is installed. You must install peer dependencies yourself. minimatch@3.0.2added 1 package from 1 contributor, updated 1 package and audited 6977 packages in 4.925sfound 18 vulnerabilities (5 low, 7 moderate, 5 high, 1 critical)run npm audit fix to fix them, or npm audit for detailsjs@juns:~/Desktop/ tools/github_Notes/Blogs$ npm install acorn@”6.0.0” npm install –save hexo-adminhexo server -dopen http://localhost:4000/admin/ git remote add origin https://github.com/JunsWg/JunsWg.github.io.git","categories":[],"tags":[]},{"title":"hexo-admin 编辑MD实时看效果","slug":"hexo-admin","date":"2018-12-17T03:33:58.000Z","updated":"2018-12-17T07:17:36.373Z","comments":true,"path":"2018/12/17/hexo-admin/","link":"","permalink":"http://yoursite.com/2018/12/17/hexo-admin/","excerpt":"","text":"hexo-admin参考文献 如何优雅地发布Hexo博客 就目前而言，我所知道的发布Hexo的博客有如下几种：1、原始方式，也就是在服务器上编写md文件，然后利用hexo g来生成；2、利用github+hook来管理，小锅这里有一篇教程；3、其他(hexo-admin or other plugins)；我所用的这个方式就属于第三种，略微改进版。也许你已经看过[那么可以概览之后忽略]，也许你没看过，那么请耐心看完，反正都点进来了，也许有福利呢，who knows… 环境说明格子这里所使用的环境如下：1、阿里云 Linux 3.10.0-514.6.2.el7.x86_642、NodeJs 6.10.33、Hexo-cli: 1.0.24、Hexo 3.3.75、Hexo-admin6、Nginx1.9.9 本篇博客的重点在于Hexo博客的优雅发布，所以其他必需环境的安装大部分会简短带过。如果还未安装过相关环境或者不会安装相关环境的请自行百度，网上有特别丰富的教程资料，这里只给出部分链接供参考。重要说明：格子未直接使用hexo server启动hexo服务来对外提供博客的访问，而是通过nginx作为web服务器对外提供服务。NodeJs下载地址1http://nodejs.cn/download/ 安装请参考这里，注意自己选择的安装包。Hexo官网1https://hexo.io/ 安装请参考这里。需要注意的是，格子这里是将环境搭建在阿里云机器上，并不是通过GitHub托管，毕竟用GitHub的子域名感觉不够高大上，毕竟装(chui)比(niu)要装一整套的。所以我就花重金买了域名，买了云主机，买了oss，这样装备齐全之后，感觉逼格都提高了。 另：安装完博客之后，有很多主题可供挑选，点击这里，找到自己喜欢的主题，并给hexo换上，舒舒服服地来一发吧。Hexo-admin主角登场了，前面也有提到过，管理Hexo博客，我所知道的有几种方式。用手动管理的方式未免显得太过于原始人，即便你用本地的Markdown编辑器洋洋洒洒地写完了一篇博客，还是得屁颠屁颠地连接到服务器，然后将文件上传到博客服务器，再然后谄媚地告诉服务器，乖，帮我执行一下hexo g，命令执行完，静态页面生成后一篇博客才叫告一段落。也许你不嫌麻烦，觉得这样也挺好的，没那么多屁事儿折腾，那么就坚持自己的做法也未尝不可。但是，如果你跟我一样嫌(tai)麻(lan)烦(le)的话，那么利用Hexo-admin插件，加上自己部分diy，也许一个自己比较满意的Hexo博客发布方式就到手了，岂不是一大爽事。 就是这个feel~倍儿爽 反正我就是懒，不要拉我，让我懒。其实有时候这种“懒”往往能促使人进步，如果不嫌麻烦甘于重复劳动，虽然会少掉很多折腾，但也会少掉很多发现和进步。好了，鸡汤喝完，该说正事儿了。hexo-admin官网1https://jaredforsyth.com/hexo-admin/ step 1安装必要环境，请参照上面step 2初始化博客，一般到这里你应该是已经初始化自己的博客了，如果还没有的话，请看下面1234cd /usr/local/hexo init yourblogcd yourblognpm install step 3安装hexo-admin插件，并且启动hexo服务，打开浏览器访问能看到基本的界面123npm install --save hexo-adminhexo server -dopen http://localhost:4000/admin/ 登录界面 到这里，没进行配置的小伙伴可能还无法登录，请接着往下看。step 4在hexo的_config.yml配置hexo-admin12345admin: username: zoro password_hash:be121740bf988b2225a313fa1f107ca1 secret: hey hexo deployCommand: &apos;./admin_script/hexo-generate.sh&apos; 注1、password_hash就是密码，通过bcrypt hash，你可以用尽你一切手段对自己的密码做一个bcrypt加密，C/Java/Python都可以，做人嘛，重要的是嗨森；2、secret用以cookies安全；3、deployCommand就是一个关键点，不要着急，下面给出说明；主页 Post：博客文章列表，包括已经发布的和还在草稿箱等待宠幸的；Pages：就是诸如标签云之类的页面管理；About：关于admin插件的说明hexo-gen：这个原来是Deploy，被我修改了，关键节点；Settings:配置； step 5先解释一下上面配置的那个deployCommand的用处，目的在于页面上你点击了Deploy页面下面的Deploy按钮的时候，所执行的脚本，这里格子拿它来作为执行hexo g的载体。说到这里，可能有些人不是很理解为什么要这么做，看官莫急，听我细细道来。其实，当你以hexo server -d启动了hexo服务的时候，hexo-admin插件在你修改了 某篇博已发布博客，或者新发布博客的时候，会在后台帮你执行一系列操作，所以这个时候，你可以通过http://localhost:4000访问就可以看到刚才发布到博客了，看到这里，有读者应该就要心里问候格子声：那你是不是傻，为什么还要折腾？容我说一句，原因只有一点：以hexo server启动的hexo对外提供的服务，并不是特别稳定，访问略慢，毕竟不是专门的web服务容器，而且如果你不以nohup方式启动的话，一旦关掉Xshell等操作界面的时候，就会被迫关掉，所以带来了一系列令人不喜的体验，这就是我折腾的唯一原因。因此，其实格子是以Nginx为web服务容器对外提供博客服务，每次将新博客生成静态Html放到Nginx配置的目录下，速度不要太快；格子的云主机只有1G内存 单核CPU,还是能有不俗的访问体验，所以觉得还算没白折腾。有点走题，话说回来，大体的步骤是这样：1、Nginx提供web服务2、hexo-admin提供博客管理3、利用hexo-admin在浏览器实现博客编写，或者自己本地md编辑器写好之后粘贴到hexo-admin，后者可能更为保险，防止丢失。4、利用hexo-admin留下来的deploy按钮，去执行我们放在博客服务器上的脚本，来生成html页面；所以，重点来了，在_config.yml里面填写好deployCommand的存储路径之后，在该路径下生成脚本；touch hexo-generate.sh;vim hexo-generate.sh; 输入以下内容12#!/usr/bin/env shhexo g 保存退出，并赋予执行权限执行Shift+:，输入q，如下12:qchmod +x hexo-generate.sh step 6验证效果，这里我没有贴出Nginx的配置，稍等给出，可以先行验证是否有效果1、启动hexo server2、访问http://localhost:4000/admin并登陆3、进入Posts页面，新建博客并编写发布；4、进入Deploy页面（如果你还没改掉改名称的话），点击下面的Deploy按钮5、进入博客目录-&gt;public，查看相应的html是否有生成，如果有，那么恭喜你成功了。这里有两个问题：①、hexo-admin的作者将hexo-admin的服务依赖于hexo来运行[hexo s]，个人觉得有点浪费资源，但有碍于没时间，只好暂时将就这样。有兴趣的人，可以去阅读源码，然后将hexo-admin处理成独立的服务。②、Deploy页面的功能其实被我们diy成hexo generate的执行者了，所以有强迫症的小伙伴可以将页面内容改成具体含义的，比如格子改成了hexo-gen，修改路径在hexo目录下，node_modules/hexo-admin/www/bundle.js；差不多就是这样，突然觉得有点没头没尾，因为没有讲Nginx部分，下面给出，这样大家应该不会觉得特别乱；Nginx下载http://nginx.org/en/download.html安装请搜索网上安装教程，特别多，这里不做重复劳动了。如果有什么问题可以留言指出。配置 server { listen 80; #域名，多个用空格隔开 server_name lzoro.com blog.lzoro.com; #配置hexo博客目录 root /usr/local/hexo/public; location / { index index.html index.htm; } access_log /tmp/logs/nginx/hexo.access.log; } 启动nginx，访问自己的域名http://blog.lzoro.com，如果没出问题的情况下，会出现自己的博客，然后可以看到各篇博客的情况。小结发布Hexo博客的方式有好几种，每个人的喜好不一样，所以也无关优劣。格子这里带来的方式是利用Nginx作为web容器，利用Hexo-admin作为web后台管理来管理hexo博客，然后通过hexo-admin留下来的脚本执行按钮执行hexo g生成博客静态页面，相当于，你只需要一个浏览器，无需远程连接博客服务器，就可以轻松发布自己的博客了。如果文章对你帮助，无妨留个言让格子知道呗。 作者：格子Lin链接：https://www.jianshu.com/p/68e727dda16d來源：简书简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。 安装 hexo-admin参考文献 hexo-admin安装使用 cd hexo 目录 1npm install --save hexo-admin 启动 hexo 1hexo s 然后打开 http://localhost:4000/admin/ 就可以看到管理页面。 在 hexo-admin 你可以 Pages - 新加 page；Posts - 新加或删除 post；双击一个 post，你可以编辑，预览，新增修改 tags、categories，选择发布或不发布；Settings - 一些配置；Deploy - 可以直接部署到 github。 问题 minimatch 1npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue当你安装 hexo-admin，执行 npm install –save hexo-admin 时，可能会遇到上面的错误提示，是因为你缺少了一些依赖，执行下面的就好了。 123npm install minimatch@&quot;3.0.2&quot; npm update -dConfig value “admin.deployCommand” not found 当你第一次点击 Deploy 按钮时，可能会遇到上述的错误，因为缺少了执行 deploy 的命令，这个问题已经有人提了 issue 并且解决了https://github.com/jaredly/hexo-admin/issues/70还需要注意的是，issue 中的脚本只是 hexo deploy，只是做 deploy 操作，但是一般我们的使用习惯是编辑完之后 deploy，所以是要 deploy 最新的，需要把脚本改为即可 1234#!/usr/bin/env shhexo ghexo ddeploy 后你可能看到 Std Error(node:83411) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.Warning: Permanently added the RSA host key for IP address ‘13.229.188.59’ to the list of known hosts.Everything up-to-date这不是错误，你可以不用管。说明已经 deploy 成功。 复制图片时的一个小问题 hexo-admin 编辑时支持直接复制图片（截图）到内容，这点是我比较喜欢的。但是有个问题，复制进去后是加载不出来的，会出现图裂的小图标。 这时你只需要点击别的页面，再点回来就可以看到了，就是“刷”一下就好了，最简单的就是点击右上角打勾的按钮，这个按钮的作用是拼写检查，点一下再点回来，就可以看到你刚复制进去的图片了。 这大概是因为 hexo-admin 对图片做了延迟加载，具体可以看看这篇文章说的https://htchz.me/2018/03/10/Hexo/ 参考资料 https://www.jianshu.com/p/68e727dda16dhttps://blog.kinpzz.com/2016/12/31/hexo-admin-backend-management/https://github.com/jaredly/hexo-admin hexo-admin后台管理博客 需求像Hexo这种静态博客用起来很方便，但是硬伤就是没有后台管理，每次想写博客或者说想要修改原博客的话，都需要在本机上找markdown文件，修改之后发布，尤其是如果机器上没有安装hexo,git等工具的时候，就无法修改了。因此hexo可不可以以像wp,ghost这种有后台管理, 随时随地编辑博客呢? 正巧hexo专门有一个插件hexo-admin 提供了在web UI下增删改查博客的功能，我也正好有一个VPS, 于是就有了下面的一种方法. 解决方法首先说一下条件与需求。 我自己有一个的VPS，本来是可以直接将hexo部署到VPS的，但是考虑到自己维护的VPS的稳定性等问题，最后决定将hexo的静态页面部署github-pages上。 我的目的有两个: 拥有在线编辑博客的后台本地机器同时也可以编辑发布博客二者需要保持同步基于这样的需求，仅仅靠github pages显然不可行了,必须借助VPS了.保持同步的意思是VPS的内容与本地机器上的博客的资源要保持一致。就是说我在线修改了某篇博客，然后之后如果可以很简单的同步到本地，使得两端保持同步，反过来一样。 我的做法是: 将hexo目录下的相关文件包括_config.yml,source/等文件建立一个私人repo(个人使用coding.net)VPS上安装好hexo,具体过程与换台机器安装同理, 可参考这篇博客hexo迁移重装。VPS上安装hexo-admin插件，这样可以在线编辑了. 在这一步的时候, 为了方便,我用了一个子域名以及在VPS上用nginx做前段端口转发.到这里后台管理基本没有问题了. 接下来就是在线发布了. 正巧的是hexo-admin提供了这个功能, 有一个Deploy的功能,具体实现是使用nodejs的spawn函数来执行发布脚本的. 一开始不太懂spawn这个函数的使用, 就直接在deploy中随便输入了东西,结果各种 spawn err. 后来查过资料,才知道deploy的输入的位置其实是对hexo-admin的配置里面deployCommand的选项,可以为空. 打个比方,如果我在deployCommand写的是./hexo-deploy, 然后点击deploy按钮之后, 后台就可以执行hexo-deploy脚本的内容了. 有了这个接口就非常灵活了. 因为基于此, 我们不但来发布博客,甚至可以把同步的脚本加进去.具体参考 https://github.com/jaredly/he... 下面说一下发布以及同步的操作: 在博客目录写一个有关git同步的小脚本:server-upload.sh 用来同步VPS目录下的变化，主要代码其实就是先git pull 拉取repo最新, 之后在push. 具体脚本代码不再赘述.建一个hexo-deploy的脚本,内容:1hexo g &amp;&amp; hexo d 1./server-upload.sh 利用hexo-admin的deploy功能，可以在线发布，注意修改_config.yml: 加上hexo-admin的admin选项, 加一个deployCommand: ./hexo-deploy的字段,如下:1234admin: username: XXX password: XXXXX deployCommand: &apos;./hexo-deploy&apos; 编辑完博客时候，发布的时候，需要点击hexo-admin的deploy。这样在后台就可以执行前面定义的hexo-deloy脚本了本地机器也需要有一个upload.sh的脚本, 每次同样需要先git pull 在git push 到私人repo. 其实就是版本控制那一套.到现在基本完成了自己可以随时随地编辑博客并且多端同步的需求了. 之前也考虑过CI持续集成,但是大部分都是再建立一个分支, 需要把博客的source公开, 不太合适. 所以就选择了hexo-admin这种方法. 这篇博客便是在线完成的. 其实这里面的坑还是蛮多的(主要不熟悉node). 此外开始使用supervisor做后台运行监控, 结果不知为何, 在hexo d包括git的pull或者push等操作,都会报错,提示让我确认git用户, 但是我已经设置了git config的email和name. 查了很多资料也没有解决, 后来直接抛弃supervisor, 直接使用nohup来放后台运行了. 大概是这样了, 有什么问题可以留言或者邮件. 参考文献 hexo上传到GitHub 在你的hexo项目目录配置文件中找到 1234deploy: type: git repo: https://github.com/×××.github.io branch: master 然后按自己的情况进行配置,运行 hexo d #如果没有报错就能在网页上浏览了 1Ps: 可以将hexo d放到脚本中（即，先前提到的hexo-deploy），由hexo-admin的Deploy执行 下面总结下发布的总体流程吧123hexo new &quot;新的文章&quot;hexo g 生成新的静态文件hexo d 发布到GitHub 使用hexo-admin deploy -d 出现提示1fatal: could not read Username for &apos;https://github.com&apos;: No error’ 参考文献 [kevin的博客]（http://www.cnblogs.com/zhenghengbin/p/9655060.html） 解决办法•修改配置文件：根目录下的_config.yml，修改deploy节点。•原来的配置为：deploy: type: git repo: https://github.com/{yourname}/{yourname}.github.io.git branch: master •修改为如下：deploy: type: git repo: https://{yourname}:{yourpassword}@github.com/{yourname}/{yourname}.github.io.git branch: master","categories":[],"tags":[]},{"title":"hexo主题中代码加行号以及字体修改","slug":"hexo主题中代码加行号已经字体修改","date":"2018-12-17T03:12:57.000Z","updated":"2018-12-17T03:21:22.183Z","comments":true,"path":"2018/12/17/hexo主题中代码加行号已经字体修改/","link":"","permalink":"http://yoursite.com/2018/12/17/hexo主题中代码加行号已经字体修改/","excerpt":"","text":"参考文献 用hexo部署博客的几个问题 问题1.hexo的代码的行号问题：我在文章里插了一段代码，无法显示行号。123456修改_config.yml文件中highlight中line_number:true就可以显示行号了。对于文章的描述这个是根据主题说的了。比如下面这个主题就会高亮http://qingkee.net所以，如果你想描述也高亮就只有试着修改主题或换主题了。 2.首页上的文章标题的字体怎么变大点，在哪个文件里修改呢？12345678回答1： 一般在themes目录-&gt;主题名-&gt;source-&gt;css中配合F12看看是哪一个样式了回答2： 一般在主题css中修改路径大概是：themename/source/css/_partial/article.styl修改article.styl中 .article-title以下是我的.article-title &#123; color: #080808; margin-left: 0px; font-weight: 300; line-height: 35px; margin-bottom: 20px; font-size: 28px; font-family: STXingkai, serif; color: #333; -webkit-transition: color 0.3s; -moz-transition: color 0.3s; -o-transition: color 0.3s; transition: color 0.3s; &amp;:hover&#123; color: #657b83; &#125; &#125;效果地址 个人对于本问题的补充：本地使用的theme为BlueLake，参考该theme提供的README.md，里面有提及修改方法。","categories":[],"tags":[]},{"title":"Hexo主题配置与优化","slug":"Hexo主题配置与优化","date":"2018-12-17T03:09:32.000Z","updated":"2018-12-17T03:21:27.279Z","comments":true,"path":"2018/12/17/Hexo主题配置与优化/","link":"","permalink":"http://yoursite.com/2018/12/17/Hexo主题配置与优化/","excerpt":"","text":"Hexo主题配置与优化（二） 参考文献 https://starwindy.oschina.io/2015/05/06/Hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%BC%98%E5%8C%96%EF%BC%88%E4%BA%8C%EF%BC%89/ 2015-05-06修改调试技巧 在chrome浏览器中按F12，调出审查元素，然后点击最左端的搜索图标，就可以单独页面上查看任意元素的样式。然后再点击元素，就可以在右侧的Styles选项的下方调整其代码，而且改动实时生效，代码改动完页面相应元素马上就会改变，显示出效果，这点非常棒！等到调整满意后就复制相关css代码到别的地方备份一下。因为只要一刷新，页面就会恢复成原来的样子。 如果修改满意后，但是不知道要修改的相关代码具体在哪个文件，可以去landscape-plus主题github地址在This repository中搜索相关代码，然后就知道相关代码所在的文件路径了。添加网站小图标 到D:\\hexo\\themes\\landscape-plus\\layout_partial编辑head.ejs文件，按Ctrl＋f查找关键词favicon，找到在第28行和第29行。在 &lt;% if (theme.favicon){ %&gt;的下面插入以下代码： 即变成： &lt;% if (theme.rss){ %&gt; &lt;% } %&gt; &lt;% if (theme.favicon){ %&gt; &lt;% } %&gt; &lt;%- css(‘css/style’) %&gt; 然后在网上找个好看的图标，或者去图标生成网站：http://www.faviconer.com/生成一个后缀名为.ico的图标文件，最后把该文件放到D:\\hexo\\source目录下，重新部署即可。添加自定义404页面 直接新建一个404.html文件放到D:\\hexo\\source目录下，然后编辑即可，注意最上面要写： layout: false404音乐电台 因为熊海做的这个音乐电台只有一个html文件和一张背景图片，所以可以添加到404页面（在此感谢熊海）。在这个百度网盘下载熊海博客电台.rar，然后新建一个404.html文件，在—下方粘贴代码，然后把这个文件放到D:\\hexo\\source和D:\\hexo\\themes\\landscape-plus目录下，接着把下载文件中的bg.jpg放到D:\\hexo\\source\\images目录下即可。修改正文字体大小及调整行间距 在D:\\hexo\\themes\\landscape-plus\\source\\css_variables.styl中的第34行，改为font-size = 16px，然后顺便把正文的行间距也一起改了：line-height = 1.8em。但是改了后所有的行间距都变成1.8em了，我想把侧边栏的文字的行间距改小一点，于是去D:\\hexo\\themes\\landscape-plus\\source\\css_partial\\sidebar.styl修改.widget下为line-height: 1.6em，注意还要删掉@extend $base-style这一行才能起效果。修改副标题字体大小和颜色修改副标题字体颜色 我想修改副标题的字体颜色，这里推荐给大家一个办法:先去爱词霸 翻译 “副标题字体颜色”，结果会出来 “Subtitle font color” ，然后去hexo-theme-landscape，在上方的搜索框搜索Subtitle font color回车，然后我们就找到了修改字体颜色的目录为hexo-theme-landscape（主题目录）/source/css/_partial/header.styl，接着去我们自己相应的主题目录编辑D:\\hexo\\themes\\landscape-plus\\source\\css_partial\\header.styl文件，还是搜索关键字subtitle，找到第60行修改为： ##subtitle @extend $logo-text font-size: subtitle-size line-height: subtitle-size letter-spacing: 5px color: ##fff 其中letter-spacing是字符间距，你可以调整它试一下，颜色color改为##fff白色，和主标题一致。修改副标题字体大小 因为副标题字体大小的英语是subtitle size，所以同样在hexo-theme-landscape中搜索subtitle size，得到结果页面，很明显看出要修改主题目录下的source/css/_variables.styl文件，于是查找subtitle后把16px改为20px： // Headerlogo-size = 40pxsubtitle-size = 20pxbanner-height = 300pxbanner-url = “images/banner.jpg” 经过测试可以知道上面的logo-size表示你的主标题字体大小，而你的主题目录/source/css/_partial/header.styl文件中logo-text那一栏的下面color就表示主标题字体的颜色。 这里一定要提醒各位：= 和:后面一定要加个空格。 修改后保存文件，然后在博客目录执行： hexo clean &amp;&amp; hexo g &amp;&amp; hexo d 重新部署后，刷新就会看到效果了。调整右侧边栏顺序 编辑主题配置文件，比如你使用的默认主题，就到D:\\hexo\\themes\\landscape_config.yml调整widgets:那一栏的顺序。原来的： widgets: category tagcloud archive recent_posts 改为： widgets: recent_posts category archive tagcloud 页面底部添加自定义文字 打开D:\\hexo\\themes\\landscape-plus\\layout_partial\\footer.ejs,在最底下 的下面和上面之间插入以下代码： 人不是因为没有信念而失败，而是因为不能把信念化成行动，并且坚持到底。——戴尔·卡耐基《人性的弱点》 2015-11-15更新：因为上述代码会撑大窗口，故而更新成下面的代码： 人不是因为没有信念而失败，而是因为不能把信念化成行动，并且坚持到底。——戴尔·卡耐基《人性的弱点》 2015-11-20更新：增加单独样式以及移动端的适配。具体详见另一篇博文：Hexo博客移动端适配的优化修改返回顶部图标位置 觉得返回顶部图标的位置太高了，要调低点。打开D:\\hexo\\themes\\landscape-plus\\source\\css_partial\\totop.styl，第5行改为bottom 2em。修改文章主题样式细节添加标题顶部日期和分类的图标 打开D:\\hexo\\themes\\landscape-plus\\source\\css_partial\\article.styl文件，修改.article-date（第16行）为： &amp;:before font-family: font-icon color: ##ccc content: “\\f073” .article-category大概是第27行: &amp;:before font-family: font-icon content: “\\f06c” 顺便调整一下日期前面图标的位置：margin-left: 20px修改文章底部标签前面的图标 .article-tag-list-link a&amp;:hover color: color-link &amp;:before content: “@” 这个图标我们使用特殊符号，而不使用FontAwesome图标，就不用写font-family: font-icon这一行代码，反之则要写。直接把你要使用的特殊符号粘贴进content的双引号之间就行了。 注意： 1.粘贴特殊符号时，在“notepad++”里是显示为“□”，但是部署或者启动服务预览后会显示出来。 2.上面的a&amp;:hover color: color-link是指鼠标滑过“标签”时，会显示链接颜色。 3.查找一些常见的FontAwesome图标对应的CSS代码可以搜索关键词“FontAwesome CSS content values”。参见文章底部的附录。 标题前面加条蓝线 修改.article-header条目,添加border-left这一行： .article-header padding: article-padding article-padding 0 border-left: 5px solid color-twitter //标题前面加条蓝线 其中color-twitter在D:\\hexo\\themes\\landscape-plus\\source\\css_variables.styl第21行为蓝色，你也可以修改为其他颜色或者自定义一个新的颜色属性。修改文章正文字体为宋体 打开D:\\hexo\\themes\\landscape-plus\\source\\css_partial\\article.styl文件，修改.article条目为： .article margin: block-margin 0 font-family: SimSun //修改正文字体为宋体 letter-spacing: 1px //调整文字间距 然后修改正文旁边的日期、分类、标题等其他字体为微软雅黑。 .article-date //修改正文旁边的日期字体 font-family: “微软雅黑” //添加这一行 同样也添加这一行到article-category .article-header .article-tag-list-item .article-comment-link .article-share-link这些条目中。修改文章一到六级标题字体为微软雅黑，并且不加粗 编辑D:\\hexo\\themes\\landscape-plus\\source\\css_extend.styl文件，修改相关代码为如下： h1 font-family: “微软雅黑” font-size: 1.5emh2 font-family: “微软雅黑” font-size: 1.5emh3 font-family: “微软雅黑” font-size: 1.3emh4 font-family: “微软雅黑” font-size: 1.2emh5 font-family: “微软雅黑” font-size: 1emh6 font-family: “微软雅黑” font-size: 1em color: color-grey 然后把他们不加粗只要删掉相关条目下的font-weight: bold和font-weight类似代码就OK。先在landscape-plus的github主页搜索bold，发现相关代码的文件是source/css/_extend.styl和source/css/_partial/article.styl。于是删除source/css/_extend.styl文件中$base-style下的h1, h2, h3, h4, h5, h6条目下的font-weight: bold代码，注意也要删除下方 h2, h3, h4, h5, h6条目下的font-weight: 600这一行代码。接着去source/css/_partial/article.styl文件，删除.article-entry下的h1, h2, h3, h4, h5, h6条目下的font-weight: bold代码。于是1-6级标题不加粗就完成了。修改侧边栏字体为宋体 打开D:\\hexo\\themes\\landscape-plus\\source\\css_partial\\sidebar.styl，在.widget下方添加一行，如下： .widget font-family: SimSun //修改侧边栏字体为宋体 标题字体不加粗 打开D:\\hexo\\themes\\landscape-plus\\source\\css_partial\\article.styl文件，删掉.article-title条目下方的font-weight: bold这一行。修改右侧分类、近期文章等字体为宋体 打开D:\\hexo\\themes\\landscape-plus\\source\\css_partial\\sidebar-aside.styl文件，修改.widget-title条目如下： .widget-title font-weight: bold //字体加粗 font-family: SimSun //修改字体为宋体 @extend $block-caption 重新部署后，刷新即可。附录特殊符号大全 http://tw.piliapp.com/symbol/ http://w13.loxa.edu.tw/ctjh930220/ http://star.gg/special-symbols http://www.1t2t.com/3t/soft/28.htm FontAwesome对应CSS值 A list of Font Awesome icons and their CSS content values Every Font Awesome 4.3.0 Icon, CSS Class, &amp; Unicode Font Awesome icons and their CSS content values","categories":[],"tags":[]},{"title":"BlueLake theme的README","slug":"BlueLake_README","date":"2018-12-17T03:04:46.000Z","updated":"2018-12-17T03:22:00.902Z","comments":true,"path":"2018/12/17/BlueLake_README/","link":"","permalink":"http://yoursite.com/2018/12/17/BlueLake_README/","excerpt":"","text":"BlueLake一个简洁轻量化的响应式Hexo博客主题。 点击预览 安装安装主题和渲染:123$ git clone https://github.com/chaooo/hexo-theme-BlueLake.git themes/BlueLake$ npm install hexo-renderer-jade@0.3.0 --save$ npm install hexo-renderer-stylus --save 启用在Hexo配置文件（hexo/_config.yml）中把主题设置修改为BlueLake。1theme: BlueLake 如果你想生成压缩后的css，在（hexo/_config.yml）中添加：12stylus: compress: true 更新12cd themes/BlueLakegit pull 配置打开themes/BlueLake/_config.yml进行配置。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114############################ Site Config Settings ############################# Theme versionversion: 2.0.1# Headermenu: - page: home directory: . icon: fa-home - page: archive directory: archives/ icon: fa-archive - page: about directory: about/ icon: fa-user - page: rss directory: atom.xml icon: fa-rss# Sidebarwidgets: - recent_posts - category - tag - archive #- weibo - links# Toctoc: enable: true number: false# Static filesjs: jscss: css# ExtensionsPlugins: hexo-generator-feed hexo-generator-sitemap hexo-generator-baidu-sitemap#Feed Atomfeed: type: atom path: atom.xml limit: 20#sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml#Local searchlocal_search: true ## Use a javascript-based local search engine, true/false.#Cmmentscomment: duoshuo: #chaooo ## duoshuo_shortname disqus: ## disqus_shortname livere: ## 来必力(data-uid) uyan: ## 友言(uid) cloudTie: ## 网易云跟帖(productKey) changyan: ## 畅言需在下方配置两个参数，此处不填。 appid: ## 畅言(appid) appkey: ##畅言(appkey)#Sharebaidu_share: true ## 百度分享JiaThis_share: ##true ##JiaThis分享duoshuo_share: #true ##true 多说分享必须和多说评论一起使用。# Analyticsgoogle_analytics: ## Your Google Analytics tracking id, e.g. UA-42025684-2baidu_analytics: ## Your Baidu Analytics tracking id, e.g. 1006843030519956000# Miscellaneousshow_category_count: true ## If you want to show the count of categories in the sidebar widget please set the value to true.widgets_on_small_screens: true ## Set to true to enable widgets on small screens.busuanzi: true ## If you want to use Busuanzi page views please set the value to true.# About pageabout: photo_url: ## Your photo e.g. http://obzf7z93c.bkt.clouddn.com/themeauthor.jpg items: - label: email url: ## Your email with mailto: e.g. mailto:zhenggchaoo@gmail.com title: ## Your email e.g. zhenggchaoo@gmail.com - label: github url: ## Your github'url e.g. https://github.com/chaooo title: ## Your github'name e.g. chaooo - label: weibo url: ## Your weibo's url e.g. http://weibo.com/zhengchaooo title: ## Your weibo's name e.g. 秋过冬漫长 - label: twitter url: title: - label: facebook url: title:# Friend linklinks: - title: site-name1 url: http://www.example1.com/ - title: site-name2 url: http://www.example2.com/ - title: site-name3 url: http://www.example3.com/ version - 用于自动刷新CDN上的静态文件。 menu - 导航菜单。 widgets - 侧边栏中的窗口小部件。 Toc - 文章目录 Static files - 静态文件目录，以方便CDN使用。 Local search self_search - 默认本地JS搜索. Cmments duoshuo - 若使用多说评论，注册多说后在这填写short_name(用于评论与分享)。 disqus - 若使用Disqus评论，注册Disqus后在这填写short_name。 livere- 若使用来必力评论，注册来必力,获得data-uid。 uyan - 若使用友言评论，注册友言,获得uid。 cloudTie - 若使用网易云跟帖评论，注册网易云跟帖,获得productKey。 changyan - 若使用畅言评论，注册畅言，获得appid，appkey。 About page - 关于我页面(hexo new page ‘about’)。 links - 友情链接。 Miscellaneous show_category_count - 是否在侧边栏分类中显示类别的数量（true/false）. widgets_on_small_screens - 小屏幕下侧边栏在底部显示. busuanzi - 用Busuanzi来统计网站访问量. google_analytics - Google Analytics tracking ID。 baIDu_analytics - Baidu Analytics tracking ID。 特征站点图标您可以准备一张ico格式并命名为 favicon.ico ，请将其放入hexo目录的source文件夹，建议大小：32px * 32px。 您可以为苹果设备添加网站徽标，请将名为 apple-touch-icon.png 的图像放入hexo目录的“source”文件夹中，建议大小为：114px * 114px。 添加站点关键字请在hexo目录的“hexo/_config.yml”中添加keywords字段，如：1234567# Sitetitle: Hexosubtitle: 副标题description: 网站简要描述,如：Charles·Zheng's blog.keywords: 网站关键字, key, key1, key2, key3author: Charleslanguage: zh-CN 设置阅读全文您可以在文章的 front-matter 中添加 description，并提供文章摘录，或在文章中使用‘‘&lt;!--more--&gt;’’手动进行截断（Hexo推荐的方式）。 自定义page页面在source文件夹中创建文件夹index.md来添加页面，并在index.md的front-matter&#39;中添加layout：page。 Create folders inlcudingindex.mdinsourcefolder to add pages, and add alayout: pageinfront-matterofindex.md`. About页面此主题默认page页面是关于我页面的布局，生成一个关于我页面：1$ hexo new page 'about' 配置照片地址、邮箱、微博链接、微博名、GitHub链接、Github名：123456789101112131415161718192021222324# About pageabout: photo_url: ## Your photo e.g. http://obzf7z93c.bkt.clouddn.com/themeauthor.jpg items: - label: email icon: fa-email url: ## Your email with mailto: e.g. mailto:zhenggchaoo@gmail.com title: ## Your email e.g. zhenggchaoo@gmail.com - label: github icon: fa-github url: ## Your github'url e.g. https://github.com/chaooo title: ## Your github'name e.g. chaooo - label: weibo icon: fa-weibo url: ## Your weibo's url e.g. http://weibo.com/zhengchaooo title: ## Your weibo's name e.g. 秋过冬漫长 - label: twitter icon: fa-twitter url: title: - label: facebook icon: fa-facebook url: title: 点击预览About页面 代码语法高亮请在hexo目录的“hexo/_config.yml”中设置“highlight”选项，如下所示：12345highlight: enable: true auto_detect: true line_number: true tab_replace: 本地搜索如果要使用本地站点搜索，您必须安装插件hexo-generator-json-content来创建JSON搜索文件 ，然后将配置添加到hexo/_config.yml：1$ npm install hexo-generator-json-content@2.2.0 --save 然后在hexo/_config.yml添加配置：123456789101112131415161718jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: true 语言该主题目前有七种语言：简体中文（zh-CN），繁体中文（zh-TW），英语（en），法语（fr-FR），德语（de-DE），韩语 （ko）,西班牙语（es-ES）,欢迎修改主题并翻译成其他语言。 Solutions 检查您当前的hexo的根目录，是否包含source /，themes /等。 如果你在使用这个主题有任何问题，请随时打开一个issue，或者给我发邮件zhenggchaoo@gmail.com。 浏览器支持 LicenseMIT License 贡献欢迎各种形式的贡献（增强功能，添加新功能，撰写文档，改进代码，提交问题和检查BUG…）。 期待您的pull request。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-12-17T01:13:05.342Z","updated":"2018-12-17T01:13:05.342Z","comments":true,"path":"2018/12/17/hello-world/","link":"","permalink":"http://yoursite.com/2018/12/17/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Markdown语法整理","slug":"test","date":"2018-12-13T02:28:04.000Z","updated":"2018-12-17T11:44:53.377Z","comments":true,"path":"2018/12/13/test/","link":"","permalink":"http://yoursite.com/2018/12/13/test/","excerpt":"","text":"Markdown 语法整理参考文献 Markdown 语法整理大集合2017 Markdown 常用语法笔记 Markdown基本语法 1. 标题一般#作为文章大标题，只有一个，一个#是一级标题，二个#是二级标题，以此类推。 支持六级标题，分别为[h1~h6] Ps： # 后面保持空格 1# ~ ###### 即123456# h1## h2### h3#### h4##### h5###### h6 样例如下 h1h2h3h4h5h6另外一种标记一级标题的方式是在文字的下一行加“=”号12AAA=== 样例如下 AAA另外一种标记二级标题在文字的下一行加“-”12BBB--- 样例如下 BBB2. 强调（斜体、加粗、删除线）2.1 斜体要倾斜的文字左右分别用一个*号或_包起来12*FFF*_FFF_ FFF 2.2 加粗要加粗的文字左右分别用两个*号或_包起来12**FFF**__FFF__ FFF 2.3 斜体加粗要倾斜和加粗的文字左右分别用三个号号或_包起来12***FFF***___FFF___ FFF 2.3 删除线要加删除线的文字左右分别用两个~~号包起来1~~FFF~~ FFF Ps:如果 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号 3. 代码3.1 代码块标记代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行123456(```) 代码... 代码... 代码...(```)Ps: 括号是为了防止转义，实际没有 123代码...代码...代码... 3.2 代码块缩进表示法Tab 或四个空格1代码 代码 3.3 语法高亮显示(自定义语法)注：根据不同的语言配置不同的代码着色1234567(```javascript)var num = 0;for (var i = 0; i &lt; 5; i++) &#123; num+=i;&#125;console.log(num);(```) 3.4 内联代码块单行代码：代码之间分别用一个反引号包起来 1`代码`fff 代码fff 4. 表格1234567891011| a | b | c ||:---------:|:--------------- | ------------:|| 居中 | 左对齐 | 右对齐 || ========= | =============== | ============ |简约写法a | b | c :-:|:- |-: 居中 | 左对齐 | 右对齐 ============|=================|============= a b c 居中 左对齐 右对齐 ========= =============== ============ 简约写法 a b c 居中 左对齐 右对齐 ============ ================= ============= 12345姓名|技能|排行--|:--:|--:刘备|哭|大哥关羽|打|二哥张飞|骂|三弟 姓名 技能 排行 刘备 哭 大哥 关羽 打 二哥 张飞 骂 三弟 html表格 http://www.tablesgenerator.com/ 5. 链接5.1 内链式注：{:target=”_blank”}跳转方式兼容性一般 ，多数第三方平台不支持跳转1[百度1](http://www.baidu.com/&quot;百度一下&quot;) 百度1 5.2 引用式12[百度2][2][2]: http://www.baidu.com/ &quot;百度二下&quot; [百度2][2][2]: http://www.baidu.com/ “百度二下” 5.3 邮箱链接&lt;xxx@outlook.com&gt; &#x78;&#x78;&#120;&#64;&#111;&#x75;&#116;&#108;&#x6f;&#x6f;&#107;&#x2e;&#x63;&#x6f;&#x6d; 6. 图片6.1 内链式1![图片alt](图片地址 &quot;图片title&quot;) 图片alt 就是显示在图片下面的文字，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加 &lt;img src=”img/图片名.jpg&gt; 6.2 引用式![name][01][01]: ./01.png ‘描述’ 6.3 图片带有链接[][5]{:target=”_blank”}[5]: http://www.baidu.com 字体颜色参考文献 Markdown修改字体颜色 语法规则如下1&lt;font 更改语法&gt; 你的内容 &lt;/font&gt; 其中更改语法有三种:123color=#0099ff 更改字体颜色 face=\"黑体\" 更改字体 size= 7 更改字体大小 举例 123456&lt;font face=\"微软雅黑\"&gt;我是微软雅黑&lt;/font&gt; //Ps：字体设置没有用...，颜色，大小设置还是ok的&lt;font face=\"STCAIYUN\"&gt;我是华文彩云&lt;/font&gt; &lt;font color=#0099ff size=7 face=\"黑体\"&gt;color=#0099ff size=72 face=\"黑体\"&lt;/font&gt; &lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt; &lt;font color=gray size=72&gt;color=gray&lt;/font&gt; 我是微软雅黑 我是华文彩云 color=#0099ff size=72 face=”黑体” color=#00ffff color=gray 更多颜色可查表: (待整理。。。。。)123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144颜色名 十六进制颜色值 颜色AliceBlue #F0F8FF rgb(240, 248, 255)AntiqueWhite #FAEBD7 rgb(250, 235, 215)Aqua #00FFFF rgb(0, 255, 255)Aquamarine #7FFFD4 rgb(127, 255, 212)Azure #F0FFFF rgb(240, 255, 255)Beige #F5F5DC rgb(245, 245, 220)Bisque #FFE4C4 rgb(255, 228, 196)Black #000000 rgb(0, 0, 0)BlanchedAlmond #FFEBCD rgb(255, 235, 205)Blue #0000FF rgb(0, 0, 255)BlueViolet #8A2BE2 rgb(138, 43, 226)Brown #A52A2A rgb(165, 42, 42)BurlyWood #DEB887 rgb(222, 184, 135)CadetBlue #5F9EA0 rgb(95, 158, 160)Chartreuse #7FFF00 rgb(127, 255, 0)Chocolate #D2691E rgb(210, 105, 30)Coral #FF7F50 rgb(255, 127, 80)CornflowerBlue #6495ED rgb(100, 149, 237)Cornsilk #FFF8DC rgb(255, 248, 220)Crimson #DC143C rgb(220, 20, 60)Cyan #00FFFF rgb(0, 255, 255)DarkBlue #00008B rgb(0, 0, 139)DarkCyan #008B8B rgb(0, 139, 139)DarkGoldenRod #B8860B rgb(184, 134, 11)DarkGray #A9A9A9 rgb(169, 169, 169)DarkGreen #006400 rgb(0, 100, 0)DarkKhaki #BDB76B rgb(189, 183, 107)DarkMagenta #8B008B rgb(139, 0, 139)DarkOliveGreen #556B2F rgb(85, 107, 47)Darkorange #FF8C00 rgb(255, 140, 0)DarkOrchid #9932CC rgb(153, 50, 204)DarkRed #8B0000 rgb(139, 0, 0)DarkSalmon #E9967A rgb(233, 150, 122)DarkSeaGreen #8FBC8F rgb(143, 188, 143)DarkSlateBlue #483D8B rgb(72, 61, 139)DarkSlateGray #2F4F4F rgb(47, 79, 79)DarkTurquoise #00CED1 rgb(0, 206, 209)DarkViolet #9400D3 rgb(148, 0, 211)DeepPink #FF1493 rgb(255, 20, 147)DeepSkyBlue #00BFFF rgb(0, 191, 255)DimGray #696969 rgb(105, 105, 105)DodgerBlue #1E90FF rgb(30, 144, 255)Feldspar #D19275 rgb(209, 146, 117)FireBrick #B22222 rgb(178, 34, 34)FloralWhite #FFFAF0 rgb(255, 250, 240)ForestGreen #228B22 rgb(34, 139, 34)Fuchsia #FF00FF rgb(255, 0, 255)Gainsboro #DCDCDC rgb(220, 220, 220)GhostWhite #F8F8FF rgb(248, 248, 255)Gold #FFD700 rgb(255, 215, 0)GoldenRod #DAA520 rgb(218, 165, 32)Gray #808080 rgb(128, 128, 128)Green #008000 rgb(0, 128, 0)GreenYellow #ADFF2F rgb(173, 255, 47)HoneyDew #F0FFF0 rgb(240, 255, 240)HotPink #FF69B4 rgb(255, 105, 180)IndianRed #CD5C5C rgb(205, 92, 92)Indigo #4B0082 rgb(75, 0, 130)Ivory #FFFFF0 rgb(255, 255, 240)Khaki #F0E68C rgb(240, 230, 140)Lavender #E6E6FA rgb(230, 230, 250)LavenderBlush #FFF0F5 rgb(255, 240, 245)LawnGreen #7CFC00 rgb(124, 252, 0)LemonChiffon #FFFACD rgb(255, 250, 205)LightBlue #ADD8E6 rgb(173, 216, 230)LightCoral #F08080 rgb(240, 128, 128)LightCyan #E0FFFF rgb(224, 255, 255)LightGoldenRodYellow #FAFAD2 rgb(250, 250, 210)LightGrey #D3D3D3 rgb(211, 211, 211)LightGreen #90EE90 rgb(144, 238, 144)LightPink #FFB6C1 rgb(255, 182, 193)LightSalmon #FFA07A rgb(255, 160, 122)LightSeaGreen #20B2AA rgb(32, 178, 170)LightSkyBlue #87CEFA rgb(135, 206, 250)LightSlateBlue #8470FF rgb(132, 112, 255)LightSlateGray #778899 rgb(119, 136, 153)LightSteelBlue #B0C4DE rgb(176, 196, 222)LightYellow #FFFFE0 rgb(255, 255, 224)Lime #00FF00 rgb(0, 255, 0)LimeGreen #32CD32 rgb(50, 205, 50)Linen #FAF0E6 rgb(250, 240, 230)Magenta #FF00FF rgb(255, 0, 255)Maroon #800000 rgb(128, 0, 0)MediumAquaMarine #66CDAA rgb(102, 205, 170)MediumBlue #0000CD rgb(0, 0, 205)MediumOrchid #BA55D3 rgb(186, 85, 211)MediumPurple #9370D8 rgb(147, 112, 216)MediumSeaGreen #3CB371 rgb(60, 179, 113)MediumSlateBlue #7B68EE rgb(123, 104, 238)MediumSpringGreen #00FA9A rgb(0, 250, 154)MediumTurquoise #48D1CC rgb(72, 209, 204)MediumVioletRed #C71585 rgb(199, 21, 133)MidnightBlue #191970 rgb(25, 25, 112)MintCream #F5FFFA rgb(245, 255, 250)MistyRose #FFE4E1 rgb(255, 228, 225)Moccasin #FFE4B5 rgb(255, 228, 181)NavajoWhite #FFDEAD rgb(255, 222, 173)Navy #000080 rgb(0, 0, 128)OldLace #FDF5E6 rgb(253, 245, 230)Olive #808000 rgb(128, 128, 0)OliveDrab #6B8E23 rgb(107, 142, 35)Orange #FFA500 rgb(255, 165, 0)OrangeRed #FF4500 rgb(255, 69, 0)Orchid #DA70D6 rgb(218, 112, 214)PaleGoldenRod #EEE8AA rgb(238, 232, 170)PaleGreen #98FB98 rgb(152, 251, 152)PaleTurquoise #AFEEEE rgb(175, 238, 238)PaleVioletRed #D87093 rgb(216, 112, 147)PapayaWhip #FFEFD5 rgb(255, 239, 213)PeachPuff #FFDAB9 rgb(255, 218, 185)Peru #CD853F rgb(205, 133, 63)Pink #FFC0CB rgb(255, 192, 203)Plum #DDA0DD rgb(221, 160, 221)PowderBlue #B0E0E6 rgb(176, 224, 230)Purple #800080 rgb(128, 0, 128)Red #FF0000 rgb(255, 0, 0)RosyBrown #BC8F8F rgb(188, 143, 143)RoyalBlue #4169E1 rgb(65, 105, 225)SaddleBrown #8B4513 rgb(139, 69, 19)Salmon #FA8072 rgb(250, 128, 114)SandyBrown #F4A460 rgb(244, 164, 96)SeaGreen #2E8B57 rgb(46, 139, 87)SeaShell #FFF5EE rgb(255, 245, 238)Sienna #A0522D rgb(160, 82, 45)Silver #C0C0C0 rgb(192, 192, 192)SkyBlue #87CEEB rgb(135, 206, 235)SlateBlue #6A5ACD rgb(106, 90, 205)SlateGray #708090 rgb(112, 128, 144)Snow #FFFAFA rgb(255, 250, 250)SpringGreen #00FF7F rgb(0, 255, 127)SteelBlue #4682B4 rgb(70, 130, 180)Tan #D2B48C rgb(210, 180, 140)Teal #008080 rgb(0, 128, 128)Thistle #D8BFD8 rgb(216, 191, 216)Tomato #FF6347 rgb(255, 99, 71)Turquoise #40E0D0 rgb(64, 224, 208)Violet #EE82EE rgb(238, 130, 238)VioletRed #D02090 rgb(208, 32, 144)Wheat #F5DEB3 rgb(245, 222, 179)White #FFFFFF rgb(255, 255, 255)WhiteSmoke #F5F5F5 rgb(245, 245, 245)Yellow #FFFF00 rgb(255, 255, 0)YellowGreen #9ACD32 rgb(154, 205, 50) Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Create a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}